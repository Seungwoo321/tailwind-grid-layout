{"version":3,"file":"WidthProvider-DHmOV0Kd.js","sources":["../../../src/components/WidthProvider.tsx"],"sourcesContent":["import { useEffect, useState, useRef, ComponentType } from 'react'\n\nexport interface WidthProviderProps {\n  measureBeforeMount?: boolean\n}\n\nexport function WidthProvider<P extends { width?: number }>(\n  Component: ComponentType<P>\n): ComponentType<Omit<P, 'width'> & WidthProviderProps> {\n  return function WidthProviderComponent(\n    props: Omit<P, 'width'> & WidthProviderProps\n  ) {\n    const { measureBeforeMount = false, ...rest } = props\n    const [width, setWidth] = useState<number | undefined>(\n      measureBeforeMount ? undefined : 1280\n    )\n    const elementRef = useRef<HTMLDivElement>(null)\n    const mounted = useRef(false)\n\n    useEffect(() => {\n      mounted.current = true\n      \n      const handleResize = () => {\n        const element = elementRef.current\n        if (!element) return\n        const newWidth = element.offsetWidth\n        setWidth(newWidth)\n      }\n\n      // Initial measurement - only if not measureBeforeMount\n      if (!measureBeforeMount) {\n        handleResize()\n      }\n\n      // ResizeObserver for better performance\n      let resizeObserver: ResizeObserver | null = null\n      if (elementRef.current && 'ResizeObserver' in window) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(elementRef.current)\n      } else {\n        // Fallback to window resize\n        window.addEventListener('resize', handleResize)\n      }\n\n      return () => {\n        mounted.current = false\n        if (resizeObserver) {\n          resizeObserver.disconnect()\n        } else {\n          window.removeEventListener('resize', handleResize)\n        }\n      }\n    }, [measureBeforeMount])\n\n    // Don't render until we have a width (if measureBeforeMount is true)\n    if (measureBeforeMount && width === undefined) {\n      return <div ref={elementRef} style={{ width: '100%' }} />\n    }\n\n    return (\n      <div ref={elementRef} style={{ width: '100%' }}>\n        <Component {...(rest as P)} width={width} />\n      </div>\n    )\n  }\n}"],"names":["useState","useRef","useEffect","jsxDEV"],"mappings":";;;AAMO,SAAS,cACd,SACsD,EAAA;AACtD,EAAO,OAAA,SAAS,uBACd,KACA,EAAA;AACA,IAAA,MAAM,EAAE,kBAAA,GAAqB,KAAO,EAAA,GAAG,MAAS,GAAA,KAAA;AAChD,IAAM,MAAA,CAAC,KAAO,EAAA,QAAQ,CAAI,GAAAA,qBAAA;AAAA,MACxB,qBAAqB,KAAY,CAAA,GAAA;AAAA,KACnC;AACA,IAAM,MAAA,UAAA,GAAaC,oBAAuB,IAAI,CAAA;AAC9C,IAAM,MAAA,OAAA,GAAUA,oBAAO,KAAK,CAAA;AAE5B,IAAAC,sBAAA,CAAU,MAAM;AACd,MAAA,OAAA,CAAQ,OAAU,GAAA,IAAA;AAElB,MAAA,MAAM,eAAe,MAAM;AACzB,QAAA,MAAM,UAAU,UAAW,CAAA,OAAA;AAC3B,QAAA,IAAI,CAAC,OAAS,EAAA;AACd,QAAA,MAAM,WAAW,OAAQ,CAAA,WAAA;AACzB,QAAA,QAAA,CAAS,QAAQ,CAAA;AAAA,OACnB;AAGA,MAAA,IAAI,CAAC,kBAAoB,EAAA;AACvB,QAAa,YAAA,EAAA;AAAA;AAIf,MAAA,IAAI,cAAwC,GAAA,IAAA;AAC5C,MAAI,IAAA,UAAA,CAAW,OAAW,IAAA,gBAAA,IAAoB,MAAQ,EAAA;AACpD,QAAiB,cAAA,GAAA,IAAI,eAAe,YAAY,CAAA;AAChD,QAAe,cAAA,CAAA,OAAA,CAAQ,WAAW,OAAO,CAAA;AAAA,OACpC,MAAA;AAEL,QAAO,MAAA,CAAA,gBAAA,CAAiB,UAAU,YAAY,CAAA;AAAA;AAGhD,MAAA,OAAO,MAAM;AACX,QAAA,OAAA,CAAQ,OAAU,GAAA,KAAA;AAClB,QAAA,IAAI,cAAgB,EAAA;AAClB,UAAA,cAAA,CAAe,UAAW,EAAA;AAAA,SACrB,MAAA;AACL,UAAO,MAAA,CAAA,mBAAA,CAAoB,UAAU,YAAY,CAAA;AAAA;AACnD,OACF;AAAA,KACF,EAAG,CAAC,kBAAkB,CAAC,CAAA;AAGvB,IAAI,IAAA,kBAAA,IAAsB,UAAU,KAAW,CAAA,EAAA;AAC7C,MAAO,uBAAAC,2BAAA,CAAC,SAAI,GAAK,EAAA,UAAA,EAAY,OAAO,EAAE,KAAA,EAAO,QAAtC,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,4GAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAgD,EAAA,IAAA,CAAA;AAAA;AAGzD,IAAA,uBACGA,2BAAA,CAAA,KAAA,EAAA,EAAI,GAAK,EAAA,UAAA,EAAY,KAAO,EAAA,EAAE,KAAO,EAAA,MAAA,EACpC,EAAA,QAAA,kBAAAA,2BAAA,CAAC,SAAW,EAAA,EAAA,GAAI,MAAY,KAA5B,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,4GAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAAA,IAA0C,CAD5C,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,4GAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAEA,EAAA,IAAA,CAAA;AAAA,GAEJ;AACF;;;;"}