{"version":3,"file":"test-components-BWxLUFPQ.js","sources":["../../../e2e/test-components.tsx"],"sourcesContent":["import React from 'react'\nimport { WidthProvider } from '../src/components/WidthProvider'\nimport { GridContainer } from '../src/components/GridContainer'\nimport { DroppableGridContainer } from '../src/components/DroppableGridContainer'\nimport { ResponsiveGridContainer } from '../src/components/ResponsiveGridContainer'\n\n// Test components for E2E tests\nexport const WidthProviderTestComponent = ({ show }: { show: boolean }) => (\n  <div>\n    {show && (\n      <WidthProvider>\n        {(width) => (\n          <div data-testid=\"width-display\">\n            Width: {width ?? 'calculating...'}\n          </div>\n        )}\n      </WidthProvider>\n    )}\n  </div>\n)\n\nexport const WidthProviderContentToggle = () => {\n  const [showContent, setShowContent] = React.useState(true)\n  \n  return (\n    <WidthProvider>\n      {(width) => (\n        <div>\n          <button onClick={() => setShowContent(false)}>\n            Null\n          </button>\n          <button onClick={() => setShowContent(true)}>\n            Content\n          </button>\n          {showContent ? (\n            <div data-testid=\"content\">Width: {width}</div>\n          ) : null}\n        </div>\n      )}\n    </WidthProvider>\n  )\n}\n\nexport const WidthProviderNullObserver = () => {\n  return (\n    <WidthProvider>\n      {(width) => <div data-testid=\"width\">{width}</div>}\n    </WidthProvider>\n  )\n}"],"names":["jsxDEV","this"],"mappings":"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"}