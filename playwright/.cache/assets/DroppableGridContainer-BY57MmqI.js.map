{"version":3,"file":"DroppableGridContainer-BY57MmqI.js","sources":["../../../src/components/DroppableGridContainer.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react'\nimport { GridContainer } from './GridContainer'\nimport type { GridItem, GridContainerProps } from '../types'\nimport { cn } from '../utils/cn'\n\nexport interface DroppableGridContainerProps extends Omit<GridContainerProps, 'onDrop'> {\n  onDrop?: (item: GridItem) => void\n  droppingItem?: Partial<GridItem>\n}\n\nexport function DroppableGridContainer({\n  onDrop,\n  droppingItem = { w: 2, h: 2 },\n  className,\n  ...props\n}: DroppableGridContainerProps) {\n  const [isDraggingOver, setIsDraggingOver] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault()\n    if (e.dataTransfer) {\n      e.dataTransfer.dropEffect = 'copy'\n    }\n    setIsDraggingOver(true)\n  }\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    // Only set to false if we're leaving the container entirely\n    const rect = containerRef.current?.getBoundingClientRect()\n    if (rect) {\n      const { clientX, clientY } = e\n      const isOutsideBounds = \n        clientX < rect.left ||\n        clientX > rect.right ||\n        clientY < rect.top ||\n        clientY > rect.bottom\n      \n      if (isOutsideBounds) {\n        setIsDraggingOver(false)\n      }\n    }\n  }\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault()\n    setIsDraggingOver(false)\n\n    const data = e.dataTransfer.getData('application/json')\n    if (!data) return\n\n    try {\n      const droppedData = JSON.parse(data)\n      const rect = containerRef.current?.getBoundingClientRect()\n      if (!rect) return\n\n      // Calculate grid position from drop coordinates\n      const relativeX = e.clientX - rect.left\n      const relativeY = e.clientY - rect.top\n\n      // Calculate grid units\n      const cols = props.cols || 12\n      const rowHeight = props.rowHeight || 60\n      const gap = props.gap || 16\n      const cellWidth = rect.width / cols\n      const cellHeight = rowHeight + gap\n      \n      const gridX = Math.floor(relativeX / cellWidth)\n      const gridY = Math.floor(relativeY / cellHeight)\n\n      const newItem: GridItem = {\n        id: droppedData.id || `dropped-${Date.now()}`,\n        x: Math.max(0, Math.min(gridX, cols - (droppingItem.w || 2))),\n        y: Math.max(0, gridY),\n        w: droppingItem.w || 2,\n        h: droppingItem.h || 2,\n        ...droppedData,\n      }\n\n      onDrop?.(newItem)\n    } catch (error) {\n      console.error('Failed to parse dropped data:', error)\n    }\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn(\n        'relative',\n        isDraggingOver && 'ring-2 ring-blue-500 ring-offset-2 rounded-lg',\n        className\n      )}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDrop={handleDrop}\n    >\n      <GridContainer {...props} droppingItem={isDraggingOver ? droppingItem : undefined} />\n      {isDraggingOver && (\n        <div className=\"absolute inset-0 bg-blue-500/10 rounded-lg pointer-events-none\" />\n      )}\n    </div>\n  )\n}"],"names":["useState","useRef","jsxDEV"],"mappings":"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"}