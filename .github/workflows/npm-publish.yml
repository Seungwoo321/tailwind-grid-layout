name: Publish to npm

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string
      tag:
        description: 'npm tag (latest, beta, next, etc.)'
        required: false
        type: string
        default: 'latest'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build:lib

      - name: Update version if provided
        if: github.event.inputs.version != ''
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Get version from package.json
        if: github.event.inputs.version == ''
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Determine npm tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # For GitHub releases, use beta tag if it's a prerelease
            if [[ "${{ github.event.release.prerelease }}" == "true" ]]; then
              echo "NPM_TAG=beta" >> $GITHUB_ENV
            else
              echo "NPM_TAG=latest" >> $GITHUB_ENV
            fi
          else
            # For manual dispatch, use the provided tag
            echo "NPM_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi

      - name: Publish to npm
        run: npm publish --access public --tag ${{ env.NPM_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release (if manual)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          body: |
            ## tailwind-grid-layout v${{ env.VERSION }}
            
            Published to npm: https://www.npmjs.com/package/tailwind-grid-layout
          draft: false
          prerelease: false