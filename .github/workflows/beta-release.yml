name: Beta Release

on:
  push:
    branches:
      - develop

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.11.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build library
        run: pnpm build:lib

      - name: Run tests
        run: pnpm test

      - name: Generate beta version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-beta.*//')
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          BETA_VERSION="${BASE_VERSION}-beta.${TIMESTAMP}"
          echo "version=$BETA_VERSION" >> $GITHUB_OUTPUT
          
          # Update package.json with beta version
          node -e "
          const pkg = require('./package.json');
          pkg.version = '$BETA_VERSION';
          require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2) + '\\n');
          "

      - name: Publish to npm (beta)
        run: npm publish --tag beta --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub pre-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.version.outputs.version }}" \
            --title "v${{ steps.version.outputs.version }}" \
            --notes "Beta release ${{ steps.version.outputs.version }}
          
          Install with: \`npm install tailwind-grid-layout@beta\`" \
            --prerelease